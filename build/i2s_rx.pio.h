// ---------------------------------------------------------------- //
// This file is autogenerated by pioasm version 2.2.0; do not edit! //
// ---------------------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ------ //
// i2s_rx //
// ------ //

#define i2s_rx_wrap_target 0
#define i2s_rx_wrap 11
#define i2s_rx_pio_version 1

static const uint16_t i2s_rx_program_instructions[] = {
            //     .wrap_target
    0x2020, //  0: wait   0 pin, 0        side 0
    0xe02f, //  1: set    x, 15           side 0
    0x4001, //  2: in     pins, 1         side 0
    0xb042, //  3: nop                    side 1
    0x0042, //  4: jmp    x--, 2          side 0
    0x8020, //  5: push   block           side 0
    0x20a0, //  6: wait   1 pin, 0        side 0
    0xe02f, //  7: set    x, 15           side 0
    0x4001, //  8: in     pins, 1         side 0
    0xb042, //  9: nop                    side 1
    0x0048, // 10: jmp    x--, 8          side 0
    0x8020, // 11: push   block           side 0
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program i2s_rx_program = {
    .instructions = i2s_rx_program_instructions,
    .length = 12,
    .origin = -1,
    .pio_version = i2s_rx_pio_version,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config i2s_rx_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + i2s_rx_wrap_target, offset + i2s_rx_wrap);
    sm_config_set_sideset(&c, 1, false, false);
    return c;
}
#endif

